# 应用名称
spring.application.name=niuke
# 应用服务 WEB 访问端口
server.port=8080
server.servlet.context-path=/niuke

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3308/forum?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
#数据库的名称、密码等
spring.datasource.username=root
spring.datasource.password=323323
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#最大连接数、超时时间等
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
#html存放的具体路径，可进行自定义，示例：resources/templates
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false
spring.thymeleaf.suffix=.html
spring.thymeleaf.servlet.content-type=text/html

# MybatisProperties
#扫描resources下的mapper包中的xml,不写这个就无法将Mapper接口和xml相关联(也就是找不到xml文件)
#除非mapper的xml文件所在目录和mapper接口所在的目录相同，就可以省去
#mybatis.mapper-locations=classpath:mapper/*.xml
#在mapper.xml文件中可以省略这个包路径
#mybatis.type-aliases-package=com.lcx.entity
#mybatis.configuration.useGeneratedKeys=true
#mybatis.configuration.mapUnderscoreToCamelCase=true

# Mybatis-plus Properties
mybatis-plus.type-aliases-package=com.lcx.entity
# 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
mybatis-plus.global-config.db-config.logic-delete-field=isDeleted
mybatis-plus.global-config.db-config.logic-delete-value=1
mybatis-plus.global-config.db-config.logic-not-delete-value=0

#mybatis日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# MailProperties
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=lcx323@foxmail.com
spring.mail.password=wbdhxmmkkybrbehj
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.stml.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# community
community.path.domain=http://localhost:8080
community.path.upload=D:/work/data/upload

# RedisProperties
spring.redis.database=11
spring.redis.host=192.168.200.130
spring.redis.port=6379

# kafkaProperties
spring.kafka.bootstrap-servers=192.168.200.130:9092
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kfka.producer.retries=1
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3S
# producer指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# consumer指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# ElasticsearchProperties
spring.elasticsearch.rest.uris=http://localhost:9200
spring.dao.exceptiontranslation.enabled=true
spring.data.elasticsearch.client.reactive.endpoints=localhost:9200

# TaskExecutionProperties
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties
spring.task.scheduling.pool.size=5

